<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-4.2.xsd">
    <!-- <security:http>: spring 过滤器链配置：
        1）需要拦截什么资源
        2）什么资源什么角色权限
        3）定义认证方式：HttpBasic，FormLogin（*）
        4）定义登录页面，定义登录请求地址，定义错误处理方式
    -->
    <security:http>
        <!--
        pattern: 需要拦截资源
        access: 拦截方式
        isFullyAuthenticated(): 该资源需要认证才可以访问
        isAnonymous():只有匿名用户才可以访问（如果登录用户就无法访问）
        permitAll():允许所有人（匿名和登录用户）方法
        -->
        <security:intercept-url pattern="/product/index" access="permitAll()"/>
        <security:intercept-url pattern="/product/add" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/product/update" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/product/list" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/product/delete" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/userLogin" access="permitAll()"/>
        <security:intercept-url pattern="/**" access="isFullyAuthenticated()"/>

        <!-- security:http-basic: 使用 HttpBasic 方式进行登录（认证） -->
        <!--<security:http-basic/>-->

        <!--官方表单认证-->
        <!--<security:form-login/>-->

        <!--自定义登录页面-->
        <security:form-login login-page="/userLogin" login-processing-url="/securityLogin"
                             authentication-success-handler-ref="myAuthenticationSuccessHandler"
                             authentication-failure-handler-ref="myAuthenticationFailureHandler"/>
        <!--关闭spring security csrf 机制-->
        <security:csrf disabled="true"/>
<!--        自定义权限不足处理-->
        <security:access-denied-handler error-page="/error"/>
    </security:http>
    <!--
    security:authentication-manager： 认证管理器
    1）认证信息提供方式（账户名，密码，当前用户权限）
    -->
    <security:authentication-manager>
<!--        <security:authentication-provider>-->
<!--            <security:user-service>-->
<!--                <security:user name="zhouzhu" password="123456" authorities="ROLE_USER"/>-->
<!--                <security:user name="jack" password="123456" authorities="ROLE_ADMIN"/>-->
<!--            </security:user-service>-->
<!--        </security:authentication-provider>-->

<!--        自定义 UserDetailService 类实现用户权限访问控制-->
        <security:authentication-provider user-service-ref="myUserDetailService"/>
    </security:authentication-manager>
    <bean id="myUserDetailService" class="com.zhouzhu.security.MyUserDetailService"/>
<!--自定义成功处理-->
    <bean id="myAuthenticationSuccessHandler" class="com.zhouzhu.security.MyAuthenticationSuccessHandler"/>
<!--自定义失败处理-->
    <bean id="myAuthenticationFailureHandler"  class="com.zhouzhu.security.MyAuthenticationFailureHandler"/>
</beans>